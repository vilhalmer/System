set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term termite

#
# Output configuration
#

set $internal_display LVDS-1
output LVDS-1 position 0 0
output HDMI-A-1 position 1367 0
output DP-3 scale 1.5

exec oguri
exec_always ogurictl output '*' --image $(ls $HOME/wallpaper/*.gif | shuf -n1)

bindsym $mod+Alt+1 exec ddcutil --display 1 setvcp 60 0x10
bindsym $mod+Alt+2 exec ddcutil --display 1 setvcp 60 0x11

#
# Input configuration
#

input * xkb_options compose:caps

set $internal_kb 1:1:AT_Translated_Set_2_keyboard
input $internal_kb {
    xkb_options altwin:swap_alt_win,compose:caps
}

input 3389:1:USBPS2 xkb_options altwin:swap_alt_win,compose:caps

set $trackpad 2:8:AlpsPS/2_ALPS_DualPoint_TouchPad
input $trackpad {
    accel_profile adaptive
    dwt enabled
    natural_scroll enabled
}

bindsym XF86TouchpadToggle input $trackpad events toggle enabled disabled
input $trackpad events disabled

#
# Bindings
#

bindsym $mod+Return exec cwd-terminal
bindsym $mod+space exec app-menu
bindsym $mod+q exec qute
bindsym Home exec termite -e 'journal'

bindsym $mod+Shift+q kill

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal
tiling_drag disable

# reload the configuration file
bindsym $mod+Shift+r reload

# Standard media keys
bindsym XF86AudioRaiseVolume exec volume up
bindsym XF86AudioLowerVolume exec volume down
bindsym XF86AudioMute exec volume mute

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Also bind these directly (they overlap with the fn media keys)
bindsym --input-device=$internal_kb f10 exec playerctl previous
bindsym --input-device=$internal_kb f11 exec playerctl play-pause
bindsym --input-device=$internal_kb f12 exec playerctl next

# Media keys on Magic Keyboard
set $magic_kb 76:615:Selectric
bindsym --input-device=$magic_kb f7 exec playerctl previous
bindsym --input-device=$magic_kb f8 exec playerctl play-pause
bindsym --input-device=$magic_kb f9 exec playerctl next
bindsym --input-device=$magic_kb f10 exec volume mute
bindsym --input-device=$magic_kb f11 exec volume down
bindsym --input-device=$magic_kb f12 exec volume up

# Brightness
bindsym XF86MonBrightnessUp exec brightness up &
bindsym XF86MonBrightnessDown exec brightness down &

# Make the Apple eject key useful
bindsym XF86Eject exec udiskie-umount --all

# Screenshots
bindsym $mod+Shift+3 exec grim -o $(swaymsg -t get_workspaces | jq -r 'map(select(.focused))[0].output') $(date +'screenshot_%Y-%m-%d-%H%M%S.png')
bindsym $mod+Shift+4 exec slurp | grim -g - $(date +'screenshot_%Y-%m-%d-%H%M%S.png')

# Color selector
bindsym $mod+Shift+5 exec slurp -p | grim -g - -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n1 | cut -f4 -d' ' | wl-copy -n

bindsym $mod+w exec sway-workspace-candidates | rofi -dmenu -p 'workspace ' | xargs swaymsg workspace

# Copy playing song info
bindsym $mod+Shift+t exec playerctl metadata --format '{{ artist }} - {{ title }}' 2>/dev/null | perl -pe '$| = 1; s/^( \- )?//; s/https?:\/\/[\w\d\.]+ - //' | wl-copy

# Close tabs with the middle mouse button
bindsym --release BTN_MIDDLE kill

# Misc
bindsym $mod+Shift+p floating toggle, sticky enable, resize set 427 240, move position 930 520

bindsym $mod+Shift+d exec makoctl dismiss
bindsym $mod+Shift+b exec bt-reconnect-audio

# Use Shift+pause to kill the mpv daemon (effectively clearing the current playlist)
bindsym --input-device=$internal_kb Shift+f11 exec mpvctl stop
bindsym --input-device=$magic_kb Shift+f8 exec mpvctl stop

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Quick jump to the first nine + last container
bindsym $mod+1 exec sway-focus-container-index 1
bindsym $mod+2 exec sway-focus-container-index 2
bindsym $mod+3 exec sway-focus-container-index 3
bindsym $mod+4 exec sway-focus-container-index 4
bindsym $mod+5 exec sway-focus-container-index 5
bindsym $mod+6 exec sway-focus-container-index 6
bindsym $mod+7 exec sway-focus-container-index 7
bindsym $mod+8 exec sway-focus-container-index 8
bindsym $mod+9 exec sway-focus-container-index 9
bindsym $mod+0 exec sway-focus-container-index 0

# Focus previous container (can only toggle, not the full stack)
bindsym $mod+grave exec swaymsg "[con_id=$(swaymsg -t get_tree | jq '.. | select(.nodes[].focused)? | .focus[1]')] focus"

mouse_warping none

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Move the current container to the end of its parent
bindsym $mod+Shift+semicolon exec sway-move-container-last

#
# Workspaces
#

bindsym f1 workspace number 1
bindsym f2 workspace number 2
bindsym f3 workspace number 3
bindsym f4 workspace number 4
bindsym f5 workspace number 5
bindsym f6 workspace number 6/media

bindsym Shift+f1 move container to workspace number 1
bindsym Shift+f2 move container to workspace number 2
bindsym Shift+f3 move container to workspace number 3
bindsym Shift+f4 move container to workspace number 4
bindsym Shift+f5 move container to workspace number 5
bindsym Shift+f6 move container to workspace number 6/media

bindsym $mod+Alt+h move workspace to output left
bindsym $mod+Alt+l move workspace to output right

workspace 1 output $internal_display
workspace 6/media output $internal_display

workspace_auto_back_and_forth yes

#
# Layout
#

workspace_layout tabbed

# Split current container
bindsym $mod+Shift+Backslash splith
bindsym $mod+Backslash splitv

# Switch the current container between different layout styles
bindsym $mod+t layout toggle tabbed stacking
bindsym $mod+s layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Shift+f focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent

bindsym $mod+Ctrl+$left resize grow width 50 px
bindsym $mod+Ctrl+$right resize shrink width 50 px
bindsym $mod+Ctrl+$up resize grow height 50 px
bindsym $mod+Ctrl+$down resize shrink height 50 px

#
# Looks
#

font Noto Sans Bold 8
client.focused #ffffffaa #ffffffaa #222222ff #ffffffaa #ffffffaa
client.focused_inactive #ffffff55 #ffffff55 #222222 #ffffff55 #ffffff55
client.unfocused #22222255 #22222255 #ddddddff #22222255 #22222255

#set $bar_bg #22222255
set $bar_bg #00000000

bar {
    font Noto Sans Bold 10
    status_command i3blocks
    position top
    separator_symbol â€“
    gaps 0 24 0 24
    status_edge_padding 6
    status_padding 0
    colors {
        statusline #ffffffff
        background $bar_bg
        separator $bar_bg
        focused_workspace $bar_bg $bar_bg #ffffffff
        active_workspace $bar_bg $bar_bg #ffffffff
        inactive_workspace $bar_bg $bar_bg #ffffff55
    }
}

floating_minimum_size 10 x 10

default_border pixel 8
hide_edge_borders --i3 none
gaps inner 24

#
# Modes
#

# Menu with various ways to get out of sway
# Stolen from https://gist.github.com/reedjosh/02192841820b18a84f6d0a07b310011d
set $exitmenu "system:  [r]eboot  [s]hutdown  [l]ogout"
mode $exitmenu {
    bindsym r exec shutdown -r now
    bindsym s exec shutdown -P now
    bindsym l exit

    bindsym Return    mode "default"
    bindsym Escape    mode "default"
}
bindsym $mod+backspace mode $exitmenu

# A mode with (almost) no bindings, to allow use of keys that are otherwise bound to sway
mode "passthrough" {
    bindsym $mod+p mode "default"
}
bindsym $mod+p mode "passthrough"

#
# Rules
#

# Group qutebrowser tabs with other qutebrowser tabs, no matter where they
# open from.
#for_window [app_id=qutebrowser] move scratchpad, exec /home/vil/System/scripts/sway-group-like

#
# Daemons
#

exec mako
#exec udiskie
exec $HOME/System/scripts/sway-loner

# Attempts to sync external display brightness
exec_always brightness current

# This machine forgets brightness when waking so fix it
exec $HOME/Code/python/dbus-glue/wake_brightness.py

# iOS-style handoff using bookmarklets
exec /home/vil/.local/share/virtualenvs/urleport/bin/urleport

# Attempt to connect to a nearby network
exec [[ $(nmcli -g state general) == "connected" ]] || nmcli connection up ifname wlp2s0

# Start a daemonic mpv that listens for playlists downloaded from subsonic. If qutebrowser
# ever gets per-site download config, the location will move to somewhere less generic.
exec_always pgrep -f '^entr.*mpv' || ls $HOME/Downloads/play.m3u | entr -napr mpv --input-ipc-server=$XDG_RUNTIME_DIR/mpv-daemon /_ &>/dev/null

# Redshift will have crashed since sway wasn't running when it started. Eventually I should fix this properly.
exec systemctl --user restart redshift

# Workaround for 1.4 fractional scaling looking truly awful.
exec swaymsg output DP-3 scale_filter linear

# Workaround for 1.4 keys being forwarded even when bound
seat * keyboard_grouping none
