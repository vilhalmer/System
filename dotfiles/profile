export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

which nvim > /dev/null 2>&1 && export EDITOR=nvim || export EDITOR=vim

# XDG Base Directory Conformance
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# If we have a custom terminfo for $TERM, use it
maybe_terminfo="$XDG_CONFIG_HOME/terminfo/$(uname)/$TERM.ti" 
[[ -f $maybe_terminfo ]] && export TERMINFO="$maybe_terminfo"

export TIGRC_USER="$XDG_CONFIG_HOME/tig/tigrc"
export VIMINIT="let \$MYVIMRC=\"$XDG_CONFIG_HOME/nvim/init.vim\" | source \$MYVIMRC"
# This will override nvim's search path, but does the same thing.
export HISTFILE="$XDG_DATA_HOME/$(basename $SHELL)/history"

export HOMEBREW_NO_AUTO_UPDATE=1

export PATH="$HOME/.cargo/bin:$PATH"
export RUST_SRC_PATH="$HOME/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src"

export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"

stty -ixon # Keep Ctrl-s from freezing the terminal

if [ -n "$SSH_CONNECTION" ] && \
   [ -z "$TMUX" ] && \
   [ -n "$SSH_TTY" ] && \
   [ -z "$NO_TMUX" ] && \
   [ "$TERM" != "mobile" ];
then
    if [ -n "$TMUX_SESSION" ]; then
        session="$TMUX_SESSION"
    else
        session="$USER"
    fi

    which tmux >/dev/null 2>/dev/null
    if [ $? -eq 0 ]; then
        tmux new-session -A -s "$session" # Create or attach to existing session.
        exit
    fi
fi

# The "mobile" terminal type apparently exists, and is incredibly useless.
if [ "$TERM" = "mobile" ]; then
    export TERM=xterm-256color
    clear # Yay even more hacky. This fixes the visual corruption that happens right after mobile connect.
fi

# Run any site-specific profile scripts.
if [ -d "$XDG_CONFIG_HOME/profile.d" ]; then
    find "$XDG_CONFIG_HOME/profile.d" -mindepth 1 -maxdepth 1 | while read file; do # For every file in profile.d, but not the directory itself.
        source "${file}"
    done
fi

